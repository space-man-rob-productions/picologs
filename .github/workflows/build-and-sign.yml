name: Build and Sign Executable

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller pyinstaller_versionfile

    - name: Build executable
      run: |
        python build.py
      env:
        REDIS_URL: ${{ secrets.REDIS_URL }}
        VERSION: ${{ secrets.VERSION }}

    - name: Azure Code Signing
      uses: azure/trusted-signing-action@v0.5.1
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: https://eus.codesigning.azure.net/
        trusted-signing-account-name: ${{ secrets.CODE_SIGNING_ACCOUNT_NAME }}
        certificate-profile-name: ${{ secrets.CERTIFICATE_PROFILE_NAME }}
        files-folder: 'dist'
        files-folder-filter: '*.exe'
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: picologs-${{ secrets.VERSION }}
        path: dist/picologs-${{ secrets.VERSION }}.exe

  release:
    needs: build-and-sign
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: picologs-${{ secrets.VERSION }}
        path: dist

    - name: Create Tag
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/v${{ secrets.VERSION }}`,
            sha: context.sha
          })

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/picologs-${{ secrets.VERSION }}.exe
        generate_release_notes: true
        draft: false
        prerelease: false
        name: Release v${{ secrets.VERSION }}
        tag_name: v${{ secrets.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
